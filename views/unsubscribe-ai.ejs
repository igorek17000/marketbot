<!DOCTYPE html>
<html>
<!-- -->
<head>
<title>marketbot-ai.com</title>

<style>

html {
   background-image: url('https://thumbs2.imgbox.com/86/bc/JQLYVv4L_t.jpg');
background-color: black;
height: 100%;
background-position: center;
background-size: cover;
position: relative;
color: white;
font-family: 'Courier New', Courier;
font-size: 25px;
}

body {
height: 100%;
position: relative;
margin: 0;
}

.main {
    padding: 20px;
    font-family: 'Courier New', Courier;
    text-align: center;
    box-shadow: 5px 5px 7px 5px #888888;
}

h1 {
    font-size: 40px;
    text-align: center;
    font-family: 'Helvetica', serif;
}


tr, th, td { 
font-size: 25px; 
text-align: left; 
font-family: 'Helvetica', serif;
padding: 10px 75px 10px 10px;
}


input {
    font-family: 'Courier New', Courier;
    width: 40%;
    font-size: 20px;
    padding: 12px 20px;
    margin: 8px 0;
    border: none;
    border-bottom: 2px solid #767474;
}

    input[type=submit] {
    font-family: 'Courier New', Courier;
    width: 20%;
    text-align: center;
    background-color: #767474;
    border: none;
    color: white;
    padding: 16px 32px;
    margin: 4px 2px;
    border-radius: 10px;
}



.topleft {
  position: absolute;
  top: 10px;
  left: 16px;
  color: white;
}

.bottomleft {
  position: absolute;
  bottom: 0;
  left: 16px;
}

.middle {
  position: absolute;
  top: 75%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.bodieleft { 
  position: absolute;
  transform: translate(-50%, -50%);
  top: 75%;
  text-align: center;
}

</style>
</head>
<body>



<div class="container">
<div class="row">
<div class="col-md-3">
</div>
            <div class="col-md-6 main">

<div class='topleft'>
    <p>MarketBot</p>
</div>

<div class='middle'>
<h1>You have successfully UNSUBSCRIBED from receiving future communications from marketbot-ai.com</h1>

</div>

    <div class='bottomleft'>
    
  </div>


</div>
<div class="col-md-3">
</div>
</div>
</div>
</body>



<!--
<script>
//var config = require('./config/config.js');
//border-bottom: 2px solid #767474;
//var customerSchema = new mongoose.Schema({ name: String, email: String, pass: String, phone: String, output: String }); 
//var Customer = mongoose.model('Customer', customerSchema, 'details'); 

//var express = require("express");
//var bodyParser = require("body-parser"); 
//var connection_string = 'mongodb://alexbot:308boonave@cluster0-shard-00-00-esmha.mongodb.net:27017,cluster0-shard-00-01-esmha.mongodb.net:27017,cluster0-shard-00-02-esmha.mongodb.net:27017/sampledb?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin&retryWrites=true&w=majority'; 
//var mongoose = require('mongoose'); 
//mongoose.connect(connection_string, { useNewUrlParser: true, useUnifiedTopology: true }); 
//var dbs = mongoose.connection;
/*
var name = this.req.body.name;
    var email = this.req.body.email;
    var pass = this.req.body.password;
    var phone = this.req.body.phone;
    //var out = output; //commandList.buildHTML(cmdArr, config.bot_name);
  
    var data = {
        "name": name,
        "email": email,
        "password": pass,
        "phone": phone,
        //"output": output
    }
*/
/*
function additFunc() {
//results.forEach(iterateFunc, errorFunc);

dbs.collection('details').insertOne(data, function(err, collection){
        if (err)
throw err;
console.log("User " + data.name + " added");
});
}
//mongoose.connect(connection_string, { useNewUrlParser: true, useUnifiedTopology: true });
dbs.collection('details').find({name}).toArray(function(err, docs) {
if(err) throw err;


if (docs < 1) { //docs[name] != null || docs[name] != data.name) { //< 1) {
additFunc()
}
if(docs) {
console.log(docs);
//ret.push(docs);



} 
});
*/

//var mongoose = require('mongoose'); 
//var runtest = run().catch(error => console.log(error.stack)); 
//var docs = await Customer.find({name}).exec(); 

/*
async function run() { 

var docs = await Customer.find({name}); 
if (docs) {
//await Customer.create({ name: name, email: email, password: password, phone: phone }); 

console.log(docs); 
console.log("tag2");
}
}
*/
function validate() {
var name = document.getElementById("name").value;
var password = document.getElementById("password").value;
//var username = config.username;
//var userpassword = config.userpassword;
//var details = details;

/*
var email = document.getElementById("email").value;
var password = document.getElementById("password").value;
var phone = document.getElementById("phone").value;
*/
/*
var docs = await Customer.find({name}).exec(); 

//window.location.href="http://nodejs-mongo-persistent-cc.b9ad.pro-us-east-1.openshiftapps.com/commands";
*/
if (name != details.name) { //"alexbot" || password != "308boonave") {

alert("Invalid credentials, try again");
} else {

document.myform.action = '/commands'; // 'http://nodejs-mongo-persistent-cc.b9ad.pro-us-east-1.openshiftapps.com/commands'; //     window.location.href='http://nodejs-mongo-persistent-cc.b9ad.pro-us-east-1.openshiftapps.com/commands';
//document.myform.action = '/clicks'; 
document.myform.method = 'post';
//document.getElementById("submitDetails").method = "post";
/*
} else {
alert("Try again");
//document.myform.action = 'http://nodejs-mongo-persistent-cc.b9ad.pro-us-east-1.openshiftapps.com/rend'; // window.location.href='http://nodejs-mongo-persistent-cc.b9ad.pro-us-east-1.openshiftapps.com/commands';
*/
}
return false;
}
</script>
-->
</html>
